{"version":3,"sources":["utils/api.js","utils/userSchema.js","components/CreateUserForm/CreateUserForm.js","components/Footer/Footer.js","components/InfoToolTip/InfoToolTip.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["api","Api","Object","classCallCheck","this","_baseUrl","_headers","Content-Type","createClass","key","value","res","ok","json","Promise","reject","concat","status","_this","fetch","headers","then","_getResponseData","_ref","_this2","name","email","password","occupation","state","method","body","JSON","stringify","userSchema","Yup","shape","required","min","CreateUserForm","occupations","states","onCreateUserSubmit","formik","useFormik","initialValues","onSubmit","values","validationSchema","react_default","a","createElement","className","handleSubmit","id","placeholder","type","onChange","handleChange","onBlur","handleBlur","defaultValue","noValidate","touched","errors","selected","disabled","map","title","index","join","isValid","Footer","href","InfoToolTip","isOpen","onClose","aria-label","onClick","App","_useState","useState","_useState2","slicedToArray","setOccupations","_useState3","_useState4","setStates","_useState5","_useState6","isInfoTooltipOpen","setIsInfoTooltipOpen","_useState7","_useState8","tooltipStatus","setTooltipStatus","useEffect","getFormOptions","data","Footer_Footer","CreateUserForm_CreateUserForm","userData","postNewUser","catch","err","console","error","infoTooltipOpen","InfoToolTip_InfoToolTip","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.a8c14c03.chunk.js","sourcesContent":["class Api {\n  constructor() {\n    this._baseUrl = \"https://frontend-take-home.fetchrewards.com/form\";\n    this._headers = {\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getFormOptions() {\n    return fetch(`${this._baseUrl}`, {\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  postNewUser({ name, email, password, occupation, state }) {\n    return fetch(`${this._baseUrl}`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({ name, email, password, occupation, state }),\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api();\n\nexport default api;\n","import * as Yup from \"yup\";\n\nexport const userSchema = Yup.object().shape({\n  name: Yup.string().required(\"You must enter your name.\"),\n  email: Yup.string()\n    .email(\"Email must be valid.\")\n    .required(\"You must enter your email.\"),\n  password: Yup.string().min(8).required(\"You must enter a password.\"),\n  occupation: Yup.string().required(\"You must select an occupation.\"),\n  state: Yup.string().required(\"You must select your state.\"),\n});\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { userSchema } from \"../../utils/userSchema\";\n\nfunction CreateUserForm({ occupations, states, onCreateUserSubmit }) {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      occupation: \"\",\n      state: \"\",\n    },\n    onSubmit: (values) => {\n      onCreateUserSubmit(values);\n    },\n    validationSchema: userSchema,\n  });\n\n  return (\n    <section className=\"form__container\">\n      <div className=\"form__heading\">\n        <p className=\"form__subtitle\">New here?</p>\n        <h2 className=\"form__title\">Create an account</h2>\n        <hr className=\"form__heading_underline\"></hr>\n      </div>\n\n      <form onSubmit={formik.handleSubmit} className=\"form\">\n        <fieldset className=\"fieldset\">\n          <input\n            id=\"name\"\n            placeholder=\"Full Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            className=\"form-field input name__input\"\n            defaultValue={formik.values.name}\n            noValidate\n          ></input>\n          {formik.touched.name && formik.errors.name && (\n            <span className=\"form__error\">{formik.errors.name}</span>\n          )}\n\n          <input\n            id=\"email\"\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            name=\"email\"\n            className=\"form-field input email__input\"\n            defaultValue={formik.values.email}\n            noValidate\n          ></input>\n          {formik.touched.email && formik.errors.email && (\n            <span className=\"form__error\">{formik.errors.email}</span>\n          )}\n\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            className=\"form-field input password__input\"\n            required\n            defaultValue={formik.values.password}\n            noValidate\n          ></input>\n          {formik.touched.password && formik.errors.password && (\n            <span className=\"form__error\">{formik.errors.password}</span>\n          )}\n\n          <select\n            id=\"occupation\"\n            className=\"form-field select select__occupation\"\n            name=\"occupation\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            required\n            defaultValue={formik.values.occupation}\n            noValidate\n          >\n            <option selected=\"selected\" disabled value=\"\" className=\"default__value\">\n              Choose occupation\n            </option>\n            {occupations.map((title, index) => (\n              <option\n                name=\"occupation\"\n                key={index}\n                className=\"occupation-title\"\n              >\n                {title}\n              </option>\n            ))}\n          </select>\n          {formik.touched.occupation && formik.errors.occupation && (\n            <span className=\"form__error\">{formik.errors.occupation}</span>\n          )}\n          <select\n            id=\"state\"\n            className=\"form-field select select__state\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            defaultValue={formik.values.state}\n            required\n            noValidate\n          >\n            <option selected=\"selected\" disabled value=\"\" className=\"default__value\">\n              Select your State\n            </option>\n            {states.map((state, index) => (\n              <option key={index} className=\"state\">\n                {Object.values(state).join(\", \")}\n              </option>\n            ))}\n          </select>\n          {formik.touched.state && formik.errors.state && (\n            <span className=\"form__error\">{formik.errors.state}</span>\n          )}\n        </fieldset>\n        <button\n          className={`submit__button ${formik.isValid ? \"submit__button_valid\":\"\"}`}\n          type=\"submit\"\n          disabled={!formik.isValid}\n        >\n        <span className={`${formik.isValid ? \"submit__button_icon\": \"\"}`}></span>\n        <span className={`${formik.isValid ? \"submit__button_background\":\"\"}`}></span>\n          <span className={`submit__button_text ${formik.isValid ? \"submit__button_valid\": \"submit__invalid\"}`}>Create account\n          </span>\n\n        </button>\n      </form>\n    </section>\n  );\n}\n\nexport default CreateUserForm;\n","import React from \"react\";\n\nfunction Footer() {\n    return(\n        <footer className=\"footer\">\n            <div className=\"footer__content\">\n                <p className=\"copyright\">Jake Johnson © 2022</p>\n                <div className=\"credits\">\n                 <div className=\"credit__item\">\n                 <a href=\"https://cssgradient.io/\" className=\"credit__link\">CSS Gradients</a>\n                <p className=\"credit__text\">Used to create all gradients on this site.</p>\n                 </div>\n                 <div className=\"credit__item\">              \n                          <a href=\"https://www.flaticon.com/free-icon/bad-feedback_5362991?term=ui%20sad%20emoji&page=1&position=69&page=1&position=69&related_id=5362991&origin=search\" className=\"credit__link\">Sad Icon</a>\n                          <p className=\"credit__text\">Icon used on error tooltip.</p>\n                              </div>\n                 <div className=\"credit__item\">\n                 <a href=\"https://www.flaticon.com/free-icon/success_1656126?related_id=1656126&origin=search\" className=\"credit__link\">Success Icon</a>\n                <p className=\"credit__text\">Icon used on successful api request tooltip.</p>\n                    </div>\n                   \n                </div>\n            </div>\n            \n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction InfoToolTip({ isOpen, onClose, status }) {\n  return (\n\n    <div className={isOpen ? \"modal__background\" : \"modal__hidden\"}> \n      <div className=\"modal__container\" noValidate>\n        <button\n          className=\"modal__close-button\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        ></button>\n        {status === \"success\" ? (\n                 <div>\n                 <p className=\"modal__success-message\">Account successfully created!</p>\n                 <div className=\"modal__icon success-icon\"></div>\n               </div>\n              \n        ) : (\n          <div>\n          <div className=\"modal__text-container\">\n          <p className=\"modal__message\">Uh oh. Something went wrong.</p>\n          <p className=\"modal__sub-message\">Please try again.</p>\n          </div>\n          <div className=\"fail-icon modal__icon \"></div>\n        </div>\n     \n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default InfoToolTip;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../utils/api\";\nimport CreateUserForm from \"../CreateUserForm/CreateUserForm\";\nimport Footer from \"../Footer/Footer\";\nimport InfoToolTip from \"../InfoToolTip/InfoToolTip\";\n\nfunction App() {\n  const [occupations, setOccupations] = useState([]);\n  const [states, setStates] = useState([]);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [tooltipStatus, setTooltipStatus] = useState(\"\");\n\n  function handleInfoTooltipOpen() {\n    setIsInfoTooltipOpen(true);\n  }\n  function handleCloseModal() {\n    setIsInfoTooltipOpen(false);\n  }\n\n  function handleCreateUserSubmit(userData) {\n    api\n      .postNewUser(userData)\n      .then(() => {\n        setTooltipStatus(\"success\");\n        setIsInfoTooltipOpen(true);\n      })\n      .catch((err) => {\n        console.error(`Error: ${err.status}`);\n        setTooltipStatus(\"fail\");\n        setIsInfoTooltipOpen(true);\n      });\n  }\n\n  useEffect(() => {\n    api.getFormOptions().then((data) => {\n      setOccupations(data.occupations);\n      setStates(data.states);\n    });\n  }, []);\n\n  return (\n    <section className=\"page\">\n      <Footer />\n      <CreateUserForm\n        occupations={occupations}\n        states={states}\n        onCreateUserSubmit={handleCreateUserSubmit}\n        infoTooltipOpen={handleInfoTooltipOpen}\n      />\n        <InfoToolTip\n        status={tooltipStatus}\n        isOpen={isInfoTooltipOpen}\n        onClose={handleCloseModal}\n      />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}